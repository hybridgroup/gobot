---
layout: documentation
page_title_show: true
title: "Gobot Example - sphero_api"
page_title: "Example: sphero_api"
author: The Hybrid Group
description: A Gobot code example
page_subtitle: "<a href='https://github.com/hybridgroup/gobot/tree/master/examples' target='_blank'>View In Repo</a>"
active_menu_docs: true
breadcrumbs: "<li><a href='#'>sphero_api</a></li>"

---
-content_for :bredcrumbs do
  = partial "/documentation/examples/breadcrumbs"

.example
  :markdown
        :::go
        package main

        import (
        	"github.com/hybridgroup/gobot"
        	"github.com/hybridgroup/gobot-sphero"
        )

        var Master *gobot.Master = gobot.GobotMaster()

        func TurnBlue(params map[string]interface{}) bool {
        	sphero := Master.FindRobotDevice(params["robotname"].(string), "sphero")
        	gobot.Call(sphero.Driver, "SetRGB", uint8(0), uint8(0), uint8(255))
        	return true
        }

        func main() {
        	gobot.Api(Master)

        	spheros := map[string]string{
        		"Sphero-BPO": "/dev/rfcomm0",
        	}

        	for name, port := range spheros {
        		spheroAdaptor := new(gobotSphero.SpheroAdaptor)
        		spheroAdaptor.Name = "sphero"
        		spheroAdaptor.Port = port

        		sphero := gobotSphero.NewSphero(spheroAdaptor)
        		sphero.Name = "sphero"
        		sphero.Interval = "0.5s"

        		work := func() {
        			sphero.SetRGB(uint8(255), uint8(0), uint8(0))
        		}

        		Master.Robots = append(Master.Robots, &gobot.Robot{
        			Name:        name,
        			Connections: []gobot.Connection{spheroAdaptor},
        			Devices:     []gobot.Device{sphero},
        			Work:        work,
        			Commands:    map[string]interface{}{"TurnBlue": TurnBlue},
        		})
        	}

        	Master.Start()
        }

