---
title: Gobot- Roomba Driver
author: The Hybrid Group
page_title: Roomba
page_subtitle: Driver
page_title_show: true
layout: documentation
active_menu_docs: true
breadcrumbs: "<li><a href='/documentation/drivers/roomba'>Roomba</a></li>"

roomba_platform: true
---

-content_for :bredcrumbs do
  = partial "/documentation/drivers/breadcrumbs"


%section.intro
  =image_tag "/images/devices/roomba.jpg", class: "display"
  .info-intro
    %p Allows user to control a Roomba iRobot Create using gobot.
  .clear
  
%section.how-to
  %h2 How to establish a connection and setup the driver
  :markdown
        :::go
        require 'gobot'
        connection :roomba, :adaptor => :roomba, :port => '/dev/ttyUSB0'
        device :roomba, :driver => :roomba, :connection => :roomba

%section.public-methods
  %h2 Public instance methods
  %h3 start
  %p
    Puts roomba in start mode.

  %h3 safe_mode
  %p
    Puts roomba in safe mode.

  %h3 full_mode
  %p
    Puts roomba in full mode.

  %h3 forward(seconds, speed=slow) → nil
  %p
    Moves roomba forward for &lt;seconds&gt; amount of time at &lt;speed&gt; (speed(int) between 0 and 500).

  %h3 fast_forward(seconds) → nil
  %p
    Moves roomba forward for &lt;seconds&gt; amount of time at max speed.

  %h3 stop
  %p
    Stops the roomba.

  %h3 backwards(seconds) → nil
  %p
    Moves roomba backwards for &lt;seconds&gt; amount of time at default speed.

  %h3 nudge_left
  %p
    Turns roomba a little bit to the left.

  %h3 nudge_right
  %p
    Turns roomba a little bit to the right.

  %h3 turn_left(seconds=1) → nil
  %p
    Turns roomba to the left the specefied amount of seconds.

  %h3 turn_right(seconds=1) → nil
  %p
    Turns roomba to the right the specefied amount of seconds.

  %h3 turn_around
  %p
    Turns roomba 180 degrees.

  %h3 drive(speed, direction, seconds = 0)  → nil
  %p
    Drives the roomba at speed (from 0 to 500) and direction (straight=32768, clockwise=65535, counterclockwise=1) for the specefied amount of time (seconds).

  %h3 play(song_number)  → nil
  %p
    Plays the song specified by song_numer.

  %h3 song(notes[Collection], song_number[Integer])  → nil
  %p
    Stores a song in the roomba.

  %h3 beep
  %p
    Makes roomba beep.

%section.how-to
  %h2 How to use
  %h3 Example controlling a Roomba.
  :markdown
        :::ruby
        require 'gobot'

        connection :roomba, :adaptor => :roomba, :port => '/dev/ttyUSB0'
        device :roomba, :driver => :roomba, :connection => :roomba

        work do
          roomba.safe_mode
          roomba.nudge_left
          roomba.nudge_right
          roomba.nudge_right
          roomba.nudge_left
        end

%section.compatability.hardware
  %h2 Works with:
  .devices
    = partial "documentation/partials/devices_platforms"
