---
title: Gobot - Leap Motion Driver
author: The Hybrid Group
page_title: Leap Motion
page_subtitle: Driver
page_title_show: true
layout: documentation
subnav_driver: true
active_menu_docs: true
breadcrumbs: "<li><a href='/documentation/drivers/leapmotion'>Leap Motion</a></li>"

leapmotion_platform: true
---

-content_for :bredcrumbs do
  = partial "/documentation/drivers/breadcrumbs"


%section.intro
  =image_tag "/images/devices/leap_motion.jpg", class: "display"
  .info-intro
    %p
      Allows user to interact with Gobot devices using a Leap Motion controller. The Leap Motion uses its built in cameras to track the user's hand motions, and translations those to events that Gobot can use to trigger actions or control hardware.
  .clear
  
%section.how-to#HowToConnect
  %h2 How To Connect
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-leapmotion"
        )

        func main() {
          leapAdaptor := new(gobotLeap.LeapAdaptor)
          leapAdaptor.Name = "leap"
          leapAdaptor.Port = "127.0.0.1:6437"

          leap := gobotLeap.NewLeap(leapAdaptor)
          leap.Name = "leap"
        ...

%section.how-to#HowToUse
  %h2 How To Use
  %h3 Example receiving hand events from a Leap Motion.
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-leapmotion"
        )

        func main() {
          leapAdaptor := new(gobotLeap.LeapAdaptor)
          leapAdaptor.Name = "leap"
          leapAdaptor.Port = "127.0.0.1:6437"

          leap := gobotLeap.NewLeap(leapAdaptor)
          leap.Name = "leap"

          work := func() {
            gobot.On(leap.Events["Message"], func(data interface{}) {
              printHands(data.(gobotLeap.LeapFrame))
            })
          }

          robot := gobot.Robot{
            Connections: []gobot.Connection{leapAdaptor},
            Devices:     []gobot.Device{leap},
            Work:        work,
          }

          robot.Start()
        }

        func printHands(frame gobotLeap.LeapFrame) {
          for key, hand := range frame.Hands {
            fmt.Println("Hand", key, hand)
          }
        }

%section.public-methods
  .commands-api#Commands
    %h1 Functions
    %p No commands
  .commands-api#Events
    = partial "/documentation/drivers/partials/leapmotion/events_leapmotion"   

%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    = partial "documentation/partials/devices_platforms"
