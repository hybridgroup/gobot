---
title: Gobot - Servo Driver
author: The Hybrid Group
page_title: Servo
page_subtitle: Driver
page_title_show: true
layout: documentation
subnav_driver: true
subnav_circuit_driver: true
active_menu_docs: true
breadcrumbs: "<li><a href='/documentation/drivers/servo'>Servo</a></li>"

arduino_platform: true
spark_platform: true
digispark_platform: true
---
-content_for :bredcrumbs do
  = partial "/documentation/drivers/breadcrumbs"


%section.intro
  = image_tag "/images/devices/servo.jpg", class: "display"
  .info-intro
    %p Provides an interface for making servos easy to work and interact with from Gobot.
  .clear
  
%section.how-to#HowToConnect
  %h2 How To Connect
  :markdown
    Install the library with: `go get -u github.com/hybridgroup/gobot-gpio`
  %h3 For Firmata:
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-firmata"
          "github.com/hybridgroup/gobot-gpio"
        )

        func main() {

          firmata := new(gobotFirmata.FirmataAdaptor)
          firmata.Name = "firmata"
          firmata.Port = "/dev/ttyACM0"

          servo := gobotGPIO.NewServo(firmata)
          servo.Name = "servo"
          servo.Pin = "3"
        ...

%section.how-to#HowToUse
  %h2 How To Use
  %p
    This example moves a servo from a random angle.

  %h3 Example
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-firmata"
          "github.com/hybridgroup/gobot-gpio"
        )

        func main() {

          firmata := new(gobotFirmata.FirmataAdaptor)
          firmata.Name = "firmata"
          firmata.Port = "/dev/ttyACM0"

          servo := gobotGPIO.NewServo(firmata)
          servo.Name = "servo"
          servo.Pin = "3"

          work := func() {
            gobot.Every("1s", func() {
              i := uint8(gobot.Rand(180))
              fmt.Println("Turning", i)
              servo.Move(i)
            })
          }

          robot := gobot.Robot{
            Connections: []gobot.Connection{firmata},
            Devices:     []gobot.Device{servo},
            Work:        work,
          }

          robot.Start()
        }
  
%section.public-methods
  .commands-api#Commands
    = partial "/documentation/drivers/partials/gpio/commands_servo"
  .commands-api#Events
    = partial "/documentation/drivers/partials/gpio/events_servo"   

%section.circuit#Circuit
  %h2 Circuit
  .description-circuit
    %p 
  .image-circuit 
    %img{:src => "/documentation/drivers/breadboards/gpio/servo_bb.png", :alt => ""}/ 
  .clear 
  
%section.compatability.hardware#Compatability
  %h2 Compatability
  .devices
    = partial "documentation/partials/devices_platforms"


